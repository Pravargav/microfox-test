name: Run Scripts on Pull Request
on:
  pull_request:
    types: [opened, synchronize, reopened, edited]
jobs:
  run-scripts:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
      - name: Install dependencies
        run: npm ci
      - name: Create directories
        run: |
          mkdir -p markfiles
          mkdir -p sdks
      - name: Make scripts executable
        run: chmod +x scripts/*.mjs
      - name: Run PR body parser script
        run: node scripts/pr-body-parser2.mjs
        env:
          PR_BODY: ${{ github.event.pull_request.body }}
          PR_NUMBER: ${{ github.event.pull_request.number }}
          PR_TITLE: ${{ github.event.pull_request.title }}
          PR_AUTHOR: ${{ github.event.pull_request.user.login }}
      - name: Run all scripts in scripts folder
        run: |
          for script in scripts/*.mjs; do
            if [ -f "$script" ]; then
              echo "Running $script..."
              node "$script"
              echo "Completed $script"
              echo "---"
            fi
          done
        env:
          PR_BODY: ${{ github.event.pull_request.body }}
          PR_NUMBER: ${{ github.event.pull_request.number }}
          PR_TITLE: ${{ github.event.pull_request.title }}
          PR_AUTHOR: ${{ github.event.pull_request.user.login }}
      - name: Comment on PR
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: '‚úÖ Scripts executed successfully!\nü§ñ SDK generated based on PR requirements.\nüìÅ Files created in sdks/ folder.'
            })
      - name: Commit and push generated files
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add markfiles/ sdks/
          if git diff --staged --quiet; then
            echo "No changes to commit"
          else
            git commit -m "Add generated files for PR #${{ github.event.pull_request.number }}"
            git push origin HEAD:${{ github.event.pull_request.head.ref }}
          fi
