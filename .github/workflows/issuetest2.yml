# Workflow 2: Welcome new contributors and auto-assign
name: Issue Management
on:
  issues:
    types: [opened]
  issue_comment:
    types: [created]

jobs:
  welcome-contributor:
    if: github.event.action == 'opened'
    runs-on: ubuntu-latest
    permissions:
      issues: write
    steps:
      - name: Check if first-time contributor
        id: check-contributor
        uses: actions/github-script@v7
        with:
          script: |
            const { data: issues } = await github.rest.issues.listForRepo({
              owner: context.repo.owner,
              repo: context.repo.repo,
              creator: context.payload.issue.user.login,
              state: 'all'
            });
            
            return issues.length === 1; // Only current issue means first-time
          result-encoding: string

      - name: Welcome first-time contributor
        if: steps.check-contributor.outputs.result == 'true'
        uses: actions/github-script@v7
        with:
          script: |
            const message = `ðŸ‘‹ Welcome @${context.payload.issue.user.login}! 

            Thank you for opening your first issue in our repository. We appreciate your contribution to the project!

            A maintainer will review your issue soon. In the meantime, please make sure you've provided:
            - [ ] A clear description of the issue
            - [ ] Steps to reproduce (if applicable)
            - [ ] Expected vs actual behavior
            - [ ] Environment details

            If you're interested in contributing code, check out our [Contributing Guidelines](CONTRIBUTING.md).`;

            github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              body: message
            });

  auto-assign:
    if: github.event.action == 'opened' && contains(github.event.issue.labels.*.name, 'bug')
    runs-on: ubuntu-latest
    permissions:
      issues: write
    steps:
      - name: Auto-assign bug issues
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.addAssignees({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              assignees: ['maintainer1', 'maintainer2'] // Replace with actual usernames
            });

  handle-commands:
    if: github.event.action == 'created' && github.event.issue
    runs-on: ubuntu-latest
    permissions:
      issues: write
    steps:
      - name: Handle slash commands
        uses: actions/github-script@v7
        with:
          script: |
            const comment = context.payload.comment.body.trim();
            const issueNumber = context.payload.issue.number;
            
            if (comment === '/close') {
              await github.rest.issues.update({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: issueNumber,
                state: 'closed'
              });
              
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: issueNumber,
                body: `Issue closed by @${context.payload.comment.user.login} ðŸ”’`
              });
            }
            
            if (comment === '/reopen') {
              await github.rest.issues.update({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: issueNumber,
                state: 'open'
              });
              
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: issueNumber,
                body: `Issue reopened by @${context.payload.comment.user.login} ðŸ”“`
              });
            }
            
            if (comment.startsWith('/assign @')) {
              const username = comment.replace('/assign @', '').trim();
              await github.rest.issues.addAssignees({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: issueNumber,
                assignees: [username]
              });
              
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: issueNumber,
                body: `Assigned to @${username} by @${context.payload.comment.user.login} ðŸ‘¤`
              });
            }

---
